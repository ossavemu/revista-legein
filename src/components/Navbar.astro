---
import { Logo, Hamburger } from '@/components/icons/index.astro'
import ToggleTheme from '@/components/ToggleTheme.astro'
import { PATHS, MESSAGES } from '@/constants/index'
import Navmodal from './NavModal.astro'
---

<nav
  class="bg-[rgba(255,255,255,0.2)] dark:bg-[rgba(0,0,0,0.2)] z-50 shadow-md dark:shadow-none"
  transition:persist
>
  <div
    class="max-w-screen-lg flex flex-wrap items-center justify-between mx-auto p-4"
  >
    <Logo />
    <div class="flex space-x-3 md:space-x-0 rtl:space-x-reverse">
      <Hamburger />
      <Navmodal />
      <div
        class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1 font-semibold"
        id="navbar-cta"
      >
        <ul
          class="flex font-medium p-4 md:p-0 mt-4 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 dark:border-gray-700"
        >
          {
            Object.values(MESSAGES).map((message, index) => (
              <li>
                <a href={Object.values(PATHS)[index] ?? '#'}>{message}</a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
    <ToggleTheme />
  </div>
  <style>
    li > a {
      @apply py-2 px-3 md:p-0;
    }
  </style>

  <script is:inline defer>
    const isCurrentPathClasses =
      'dark:text-amber-500 dark:hover:text-white text-amber-700 hover:text-gray-600'.split(
        ' '
      )
    const normalClasses =
      'dark:text-white dark:hover:text-amber-500 hover:text-amber-700 text-gray-600'.split(
        ' '
      )

    const currentPath = () => location.pathname
    const anchorPath = (href) => new URL(href).pathname

    const anchors = document.querySelectorAll('nav li a')

    const addStyles = (anchor) => {
      const isCurrentPath = () => anchorPath(anchor.href) === currentPath()

      if (isCurrentPath()) {
        anchor.classList.remove(...normalClasses)
        anchor.classList.add(...isCurrentPathClasses)
      } else {
        anchor.classList.remove(...isCurrentPathClasses)
        anchor.classList.add(...normalClasses)
      }
    }

    const addStylesToAnchors = () =>
      anchors.forEach((anchor) => {
        addStyles(anchor)
      })

    document.addEventListener('DOMContentLoaded', () => {
      addStylesToAnchors()
    })
    document.addEventListener('astro:after-swap', () => {
      addStylesToAnchors()
    })
  </script>
</nav>
